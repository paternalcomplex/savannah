// Starter Code

git clone https://github.com/adafruit/Adafruit_Python_DHT.git
cd Adafruit_Python_DHT

sudo python setup.py install
sudo apt-get update
sudo apt-get install python-dev
//sudo apt-get install python-pip
//sudo pip install simplejson
sudo python get-pip
sudo pip install pyrebase
sudo apt-get install python3-rpi.gpio
< download files for DHT22 sensor at https://github.com/adafruit/Adafruit_Python_DHT >

import RPi.GPIO as GPIOGPIO.setmode(GPIO.BCM # set board mode to Broadcom
GPIO.setup(17, GPIO.OUT) # set up pin 17
GPIO.setup(18, GPIO.OUT) # set up pin 18
GPIO.output(17,1)        # turn on pin 17
GPIO.output(18,1)        # turn on pin 18

// Initiate Database 
import time
import pyrebase 
import Adafruit_Python_DHT

sensor = Adafruit_DHT.DHT22
pin = ??

humidity, temperature = ADafruit_DHT.read_retry(sensor, pin)
humidity = round(humidity, 1)
temperature = round(temperature, 1)


from firebase import firebase

config = {
//  "apiKey": "apiKey",
// "authDomain": "projectId.firebaseapp.com",
//  "databaseURL": "https://databaseName.firebaseio.com",
//  "storageBucket": "projectId.appspot.com"
}

firebase = pyrebase.initialize_app(config)
db = firebase.database()

// I
// Push creates unique timestamp, could possibly access
data = {"temp": temp, "humidity": humidity}
// Update
db.child("data).update({"temp": <temp>, "humidity": <humidity> })

// II.
while 1:
        humidity, temperature = Adafruit_DHT.read_retry(Adafruit_DHT.DHT22, 4)
        // Time parameters
        time_hhmmss = time.strftime('%H:%M:%S')
        date_mmddyyyy = time.strftime('%d/%m/%Y')
        data = {"Date": date_mmddyyyy,"Time": time_hhmmss, "Temperature": temperature, "Humidity": humidity}
        db.child("/message").push(data)
        print("Temp: %f -- Date: %s  -- Time: %s" %(x,date_mmddyyyy,time_hhmmss))
        time.sleep(60)

// III.
def update_firebase():

	humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
	if humidity is not None and temperature is not None:
		sleep(5)
		str_temp = ' {0:0.2f} *C '.format(temperature)	
		str_hum  = ' {0:0.2f} %'.format(humidity)
	//	print('Temp={0:0.1f}*C  Humidity={1:0.1f}%'.format(temperature, humidity))	
			
	else:
		print('Failed to get reading. Try again!')	
		sleep(10)

	data = {"temp": temperature, "humidity": humidity}
	firebase.post('/sensor/dht', data)
	

while True:
		update_firebase()
		
        #sleepTime = int(sleepTime)
		sleep(5)

// IV
count = 0
if humidity is not None and temperature is not None:
        print('Temp ={0:0.1})*C Humidity={1:0.1f}%'.format(temperature, humidity))
        # Update firebase
        data ={"temperature":temperautre,"humidity": humidity, "time": hour, "day": hour+day}
        db.child("TReal/values").update(dato)
        if(count == 60):
        db.child("values").push(data)
        count = 0
        print(temperature)
        print(humidity)
        print(date, hour)
        count = count+1

        else: print('Failed to get reading. Try again!')